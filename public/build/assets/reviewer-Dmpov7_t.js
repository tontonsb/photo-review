import{G as H,u as V,l as Z,E as B,c as _,a as Q,e as tt,g as et,S as O,b as y,m as st,d as it,f as rt,h as nt,i as T,j as X,k as ot,n as at,o as lt,p as Y,q as ht,r as dt,s as ut,t as ct,v as gt,w as ft,x as b,y as yt,P as w,z as mt,A as pt,B as Ct,C as _t,D as Pt,F as A,H as wt,I as Ft,J as Gt,K as D,L as Mt,M as F,N as St,O as J,Q as c,R as Ot,T as Et,U,V as E,W as u,X as jt,Y as vt,Z as At,_ as p,$ as f,a0 as W,a1 as Rt,a2 as bt,a3 as xt,a4 as k,a5 as N,a6 as Lt,a7 as It,a8 as kt,a9 as Nt,aa as Tt,ab as Xt,ac as Yt}from"./displayImageWithScale-BXyqeM2W.js";const Dt=new Date,K=document.querySelector("form"),Jt=K.querySelector("[name=reviewing_duration_ms]");K.addEventListener("submit",()=>Jt.value=new Date-Dt);function Ut(n,t,e){const s=document.querySelector(n);s.querySelectorAll(".js-close").forEach(i=>i.addEventListener("click",r=>s.close())),document.querySelectorAll(t).forEach(i=>i.addEventListener("click",r=>s.showModal())),e&&s.showModal()}class G extends H{constructor(t){super(),this.geometries_=t,this.changeEventsKeys_=[],this.listenGeometriesChange_()}unlistenGeometriesChange_(){this.changeEventsKeys_.forEach(V),this.changeEventsKeys_.length=0}listenGeometriesChange_(){const t=this.geometries_;for(let e=0,s=t.length;e<s;++e)this.changeEventsKeys_.push(Z(t[e],B.CHANGE,this.changed,this))}clone(){const t=new G(v(this.geometries_));return t.applyProperties(this),t}closestPointXY(t,e,s,i){if(i<_(this.getExtent(),t,e))return i;const r=this.geometries_;for(let o=0,a=r.length;o<a;++o)i=r[o].closestPointXY(t,e,s,i);return i}containsXY(t,e){const s=this.geometries_;for(let i=0,r=s.length;i<r;++i)if(s[i].containsXY(t,e))return!0;return!1}computeExtent(t){Q(t);const e=this.geometries_;for(let s=0,i=e.length;s<i;++s)tt(t,e[s].getExtent());return t}getGeometries(){return v(this.geometries_)}getGeometriesArray(){return this.geometries_}getGeometriesArrayRecursive(){let t=[];const e=this.geometries_;for(let s=0,i=e.length;s<i;++s)e[s].getType()===this.getType()?t=t.concat(e[s].getGeometriesArrayRecursive()):t.push(e[s]);return t}getSimplifiedGeometry(t){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),t<0||this.simplifiedGeometryMaxMinSquaredTolerance!==0&&t<this.simplifiedGeometryMaxMinSquaredTolerance)return this;const e=[],s=this.geometries_;let i=!1;for(let r=0,o=s.length;r<o;++r){const a=s[r],l=a.getSimplifiedGeometry(t);e.push(l),l!==a&&(i=!0)}return i?new G(e):(this.simplifiedGeometryMaxMinSquaredTolerance=t,this)}getType(){return"GeometryCollection"}intersectsExtent(t){const e=this.geometries_;for(let s=0,i=e.length;s<i;++s)if(e[s].intersectsExtent(t))return!0;return!1}isEmpty(){return this.geometries_.length===0}rotate(t,e){const s=this.geometries_;for(let i=0,r=s.length;i<r;++i)s[i].rotate(t,e);this.changed()}scale(t,e,s){s||(s=et(this.getExtent()));const i=this.geometries_;for(let r=0,o=i.length;r<o;++r)i[r].scale(t,e,s);this.changed()}setGeometries(t){this.setGeometriesArray(v(t))}setGeometriesArray(t){this.unlistenGeometriesChange_(),this.geometries_=t,this.listenGeometriesChange_(),this.changed()}applyTransform(t){const e=this.geometries_;for(let s=0,i=e.length;s<i;++s)e[s].applyTransform(t);this.changed()}translate(t,e){const s=this.geometries_;for(let i=0,r=s.length;i<r;++i)s[i].translate(t,e);this.changed()}disposeInternal(){this.unlistenGeometriesChange_(),super.disposeInternal()}}function v(n){return n.map(t=>t.clone())}class m extends O{constructor(t,e){super(),this.flatMidpoint_=null,this.flatMidpointRevision_=-1,this.maxDelta_=-1,this.maxDeltaRevision_=-1,e!==void 0&&!Array.isArray(t[0])?this.setFlatCoordinates(e,t):this.setCoordinates(t,e)}appendCoordinate(t){y(this.flatCoordinates,t),this.changed()}clone(){const t=new m(this.flatCoordinates.slice(),this.layout);return t.applyProperties(this),t}closestPointXY(t,e,s,i){return i<_(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(st(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),it(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!1,t,e,s,i))}forEachSegment(t){return rt(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)}getCoordinateAtM(t,e){return this.layout!="XYM"&&this.layout!="XYZM"?null:(e=e!==void 0?e:!1,nt(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,e))}getCoordinates(){return T(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getCoordinateAt(t,e){return X(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,e,this.stride)}getLength(){return ot(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getFlatMidpoint(){return this.flatMidpointRevision_!=this.getRevision()&&(this.flatMidpoint_=this.getCoordinateAt(.5,this.flatMidpoint_??void 0),this.flatMidpointRevision_=this.getRevision()),this.flatMidpoint_}getSimplifiedGeometryInternal(t){const e=[];return e.length=at(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,e,0),new m(e,"XY")}getType(){return"LineString"}intersectsExtent(t){return lt(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)}setCoordinates(t,e){this.setLayout(e,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=Y(this.flatCoordinates,0,t,this.stride),this.changed()}}class M extends O{constructor(t,e,s){if(super(),this.ends_=[],this.maxDelta_=-1,this.maxDeltaRevision_=-1,Array.isArray(t[0]))this.setCoordinates(t,e);else if(e!==void 0&&s)this.setFlatCoordinates(e,t),this.ends_=s;else{const i=t,r=[],o=[];for(let l=0,h=i.length;l<h;++l){const d=i[l];y(r,d.getFlatCoordinates()),o.push(r.length)}const a=i.length===0?this.getLayout():i[0].getLayout();this.setFlatCoordinates(a,r),this.ends_=o}}appendLineString(t){y(this.flatCoordinates,t.getFlatCoordinates().slice()),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const t=new M(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return t.applyProperties(this),t}closestPointXY(t,e,s,i){return i<_(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(ht(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),dt(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,t,e,s,i))}getCoordinateAtM(t,e,s){return this.layout!="XYM"&&this.layout!="XYZM"||this.flatCoordinates.length===0?null:(e=e!==void 0?e:!1,s=s!==void 0?s:!1,ut(this.flatCoordinates,0,this.ends_,this.stride,t,e,s))}getCoordinates(){return ct(this.flatCoordinates,0,this.ends_,this.stride)}getEnds(){return this.ends_}getLineString(t){return t<0||this.ends_.length<=t?null:new m(this.flatCoordinates.slice(t===0?0:this.ends_[t-1],this.ends_[t]),this.layout)}getLineStrings(){const t=this.flatCoordinates,e=this.ends_,s=this.layout,i=[];let r=0;for(let o=0,a=e.length;o<a;++o){const l=e[o],h=new m(t.slice(r,l),s);i.push(h),r=l}return i}getFlatMidpoints(){const t=[],e=this.flatCoordinates;let s=0;const i=this.ends_,r=this.stride;for(let o=0,a=i.length;o<a;++o){const l=i[o],h=X(e,s,l,r,.5);y(t,h),s=l}return t}getSimplifiedGeometryInternal(t){const e=[],s=[];return e.length=gt(this.flatCoordinates,0,this.ends_,this.stride,t,e,0,s),new M(e,"XY",s)}getType(){return"MultiLineString"}intersectsExtent(t){return ft(this.flatCoordinates,0,this.ends_,this.stride,t)}setCoordinates(t,e){this.setLayout(e,t,2),this.flatCoordinates||(this.flatCoordinates=[]);const s=b(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=s.length===0?0:s[s.length-1],this.changed()}}class j extends O{constructor(t,e){super(),e&&!Array.isArray(t[0])?this.setFlatCoordinates(e,t):this.setCoordinates(t,e)}appendPoint(t){y(this.flatCoordinates,t.getFlatCoordinates()),this.changed()}clone(){const t=new j(this.flatCoordinates.slice(),this.layout);return t.applyProperties(this),t}closestPointXY(t,e,s,i){if(i<_(this.getExtent(),t,e))return i;const r=this.flatCoordinates,o=this.stride;for(let a=0,l=r.length;a<l;a+=o){const h=yt(t,e,r[a],r[a+1]);if(h<i){i=h;for(let d=0;d<o;++d)s[d]=r[a+d];s.length=o}}return i}getCoordinates(){return T(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getPoint(t){const e=this.flatCoordinates.length/this.stride;return t<0||e<=t?null:new w(this.flatCoordinates.slice(t*this.stride,(t+1)*this.stride),this.layout)}getPoints(){const t=this.flatCoordinates,e=this.layout,s=this.stride,i=[];for(let r=0,o=t.length;r<o;r+=s){const a=new w(t.slice(r,r+s),e);i.push(a)}return i}getType(){return"MultiPoint"}intersectsExtent(t){const e=this.flatCoordinates,s=this.stride;for(let i=0,r=e.length;i<r;i+=s){const o=e[i],a=e[i+1];if(mt(t,o,a))return!0}return!1}setCoordinates(t,e){this.setLayout(e,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=Y(this.flatCoordinates,0,t,this.stride),this.changed()}}class S extends O{constructor(t,e,s){if(super(),this.endss_=[],this.flatInteriorPointsRevision_=-1,this.flatInteriorPoints_=null,this.maxDelta_=-1,this.maxDeltaRevision_=-1,this.orientedRevision_=-1,this.orientedFlatCoordinates_=null,!s&&!Array.isArray(t[0])){const i=t,r=[],o=[];for(let a=0,l=i.length;a<l;++a){const h=i[a],d=r.length,g=h.getEnds();for(let C=0,z=g.length;C<z;++C)g[C]+=d;y(r,h.getFlatCoordinates()),o.push(g)}e=i.length===0?this.getLayout():i[0].getLayout(),t=r,s=o}e!==void 0&&s?(this.setFlatCoordinates(e,t),this.endss_=s):this.setCoordinates(t,e)}appendPolygon(t){let e;if(!this.flatCoordinates)this.flatCoordinates=t.getFlatCoordinates().slice(),e=t.getEnds().slice(),this.endss_.push();else{const s=this.flatCoordinates.length;y(this.flatCoordinates,t.getFlatCoordinates()),e=t.getEnds().slice();for(let i=0,r=e.length;i<r;++i)e[i]+=s}this.endss_.push(e),this.changed()}clone(){const t=this.endss_.length,e=new Array(t);for(let i=0;i<t;++i)e[i]=this.endss_[i].slice();const s=new S(this.flatCoordinates.slice(),this.layout,e);return s.applyProperties(this),s}closestPointXY(t,e,s,i){return i<_(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(pt(this.flatCoordinates,0,this.endss_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Ct(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,this.maxDelta_,!0,t,e,s,i))}containsXY(t,e){return _t(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t,e)}getArea(){return Pt(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride)}getCoordinates(t){let e;return t!==void 0?(e=this.getOrientedFlatCoordinates().slice(),A(e,0,this.endss_,this.stride,t)):e=this.flatCoordinates,wt(e,0,this.endss_,this.stride)}getEndss(){return this.endss_}getFlatInteriorPoints(){if(this.flatInteriorPointsRevision_!=this.getRevision()){const t=Ft(this.flatCoordinates,0,this.endss_,this.stride);this.flatInteriorPoints_=Gt(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t),this.flatInteriorPointsRevision_=this.getRevision()}return this.flatInteriorPoints_}getInteriorPoints(){return new j(this.getFlatInteriorPoints().slice(),"XYM")}getOrientedFlatCoordinates(){if(this.orientedRevision_!=this.getRevision()){const t=this.flatCoordinates;D(t,0,this.endss_,this.stride)?this.orientedFlatCoordinates_=t:(this.orientedFlatCoordinates_=t.slice(),this.orientedFlatCoordinates_.length=A(this.orientedFlatCoordinates_,0,this.endss_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_}getSimplifiedGeometryInternal(t){const e=[],s=[];return e.length=Mt(this.flatCoordinates,0,this.endss_,this.stride,Math.sqrt(t),e,0,s),new S(e,"XY",s)}getPolygon(t){if(t<0||this.endss_.length<=t)return null;let e;if(t===0)e=0;else{const r=this.endss_[t-1];e=r[r.length-1]}const s=this.endss_[t].slice(),i=s[s.length-1];if(e!==0)for(let r=0,o=s.length;r<o;++r)s[r]-=e;return new F(this.flatCoordinates.slice(e,i),this.layout,s)}getPolygons(){const t=this.layout,e=this.flatCoordinates,s=this.endss_,i=[];let r=0;for(let o=0,a=s.length;o<a;++o){const l=s[o].slice(),h=l[l.length-1];if(r!==0)for(let g=0,C=l.length;g<C;++g)l[g]-=r;const d=new F(e.slice(r,h),t,l);i.push(d),r=h}return i}getType(){return"MultiPolygon"}intersectsExtent(t){return St(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t)}setCoordinates(t,e){this.setLayout(e,t,3),this.flatCoordinates||(this.flatCoordinates=[]);const s=J(this.flatCoordinates,0,t,this.stride,this.endss_);if(s.length===0)this.flatCoordinates.length=0;else{const i=s[s.length-1];this.flatCoordinates.length=i.length===0?0:i[i.length-1]}this.changed()}}class Wt{constructor(){this.dataProjection=void 0,this.defaultFeatureProjection=void 0,this.featureClass=E,this.supportedMediaTypes=null}getReadOptions(t,e){if(e){let s=e.dataProjection?c(e.dataProjection):this.readProjection(t);e.extent&&s&&s.getUnits()==="tile-pixels"&&(s=c(s),s.setWorldExtent(e.extent)),e={dataProjection:s,featureProjection:e.featureProjection}}return this.adaptOptions(e)}adaptOptions(t){return Object.assign({dataProjection:this.dataProjection,featureProjection:this.defaultFeatureProjection,featureClass:this.featureClass},t)}getType(){return u()}readFeature(t,e){return u()}readFeatures(t,e){return u()}readGeometry(t,e){return u()}readProjection(t){return u()}writeFeature(t,e){return u()}writeFeatures(t,e){return u()}writeGeometry(t,e){return u()}}function x(n,t,e){const s=e?c(e.featureProjection):null,i=e?c(e.dataProjection):null;let r=n;if(s&&i&&!Ot(s,i)){t&&(r=n.clone());const o=t?s:i,a=t?i:s;o.getUnits()==="tile-pixels"?r.transform(o,a):r.applyTransform(Et(o,a))}if(t&&e&&e.decimals!==void 0){const o=Math.pow(10,e.decimals),a=function(l){for(let h=0,d=l.length;h<d;++h)l[h]=Math.round(l[h]*o)/o;return l};r===n&&(r=n.clone()),r.applyTransform(a)}return r}const Kt={Point:w,LineString:m,Polygon:F,MultiPoint:j,MultiLineString:M,MultiPolygon:S};function qt(n,t,e){return Array.isArray(t[0])?(D(n,0,t,e)||(n=n.slice(),A(n,0,t,e)),n):(jt(n,0,t,e)||(n=n.slice(),vt(n,0,t,e)),n)}function q(n,t){var r;const e=n.geometry;if(!e)return[];if(Array.isArray(e))return e.map(o=>q({...n,geometry:o})).flat();const s=e.type==="MultiPolygon"?"Polygon":e.type;if(s==="GeometryCollection"||s==="Circle")throw new Error("Unsupported geometry type: "+s);const i=e.layout.length;return x(new U(s,s==="Polygon"?qt(e.flatCoordinates,e.ends,i):e.flatCoordinates,(r=e.ends)==null?void 0:r.flat(),i,n.properties||{},n.id).enableSimplifyTransformed(),!1,t)}function L(n,t){if(!n)return null;if(Array.isArray(n)){const s=n.map(i=>L(i,t));return new G(s)}const e=Kt[n.type];return x(new e(n.flatCoordinates,n.layout,n.ends),!1,t)}class $t extends Wt{constructor(){super()}getType(){return"json"}readFeature(t,e){return this.readFeatureFromObject(P(t),this.getReadOptions(t,e))}readFeatures(t,e){return this.readFeaturesFromObject(P(t),this.getReadOptions(t,e))}readFeatureFromObject(t,e){return u()}readFeaturesFromObject(t,e){return u()}readGeometry(t,e){return this.readGeometryFromObject(P(t),this.getReadOptions(t,e))}readGeometryFromObject(t,e){return u()}readProjection(t){return this.readProjectionFromObject(P(t))}readProjectionFromObject(t){return u()}writeFeature(t,e){return JSON.stringify(this.writeFeatureObject(t,e))}writeFeatureObject(t,e){return u()}writeFeatures(t,e){return JSON.stringify(this.writeFeaturesObject(t,e))}writeFeaturesObject(t,e){return u()}writeGeometry(t,e){return JSON.stringify(this.writeGeometryObject(t,e))}writeGeometryObject(t,e){return u()}}function P(n){if(typeof n=="string"){const t=JSON.parse(n);return t||null}return n!==null?n:null}class zt extends $t{constructor(t){t=t||{},super(),this.dataProjection=c(t.dataProjection?t.dataProjection:"EPSG:4326"),t.featureProjection&&(this.defaultFeatureProjection=c(t.featureProjection)),t.featureClass&&(this.featureClass=t.featureClass),this.geometryName_=t.geometryName,this.extractGeometryName_=t.extractGeometryName,this.supportedMediaTypes=["application/geo+json","application/vnd.geo+json"]}readFeatureFromObject(t,e){let s=null;t.type==="Feature"?s=t:s={type:"Feature",geometry:t,properties:null};const i=I(s.geometry);if(this.featureClass===U)return q({geometry:i,id:s.id,properties:s.properties},e);const r=new E;return this.geometryName_?r.setGeometryName(this.geometryName_):this.extractGeometryName_&&s.geometry_name&&r.setGeometryName(s.geometry_name),r.setGeometry(L(i,e)),"id"in s&&r.setId(s.id),s.properties&&r.setProperties(s.properties,!0),r}readFeaturesFromObject(t,e){const s=t;let i=null;if(s.type==="FeatureCollection"){const r=t;i=[];const o=r.features;for(let a=0,l=o.length;a<l;++a){const h=this.readFeatureFromObject(o[a],e);h&&i.push(h)}}else i=[this.readFeatureFromObject(t,e)];return i.flat()}readGeometryFromObject(t,e){return Ht(t,e)}readProjectionFromObject(t){const e=t.crs;let s;if(e)if(e.type=="name")s=c(e.properties.name);else if(e.type==="EPSG")s=c("EPSG:"+e.properties.code);else throw new Error("Unknown SRS type");else s=this.dataProjection;return s}writeFeatureObject(t,e){e=this.adaptOptions(e);const s={type:"Feature",geometry:null,properties:null},i=t.getId();if(i!==void 0&&(s.id=i),!t.hasProperties())return s;const r=t.getProperties(),o=t.getGeometry();return o&&(s.geometry=R(o,e),delete r[t.getGeometryName()]),At(r)||(s.properties=r),s}writeFeaturesObject(t,e){e=this.adaptOptions(e);const s=[];for(let i=0,r=t.length;i<r;++i)s.push(this.writeFeatureObject(t[i],e));return{type:"FeatureCollection",features:s}}writeGeometryObject(t,e){return R(t,this.adaptOptions(e))}}function I(n,t){if(!n)return null;let e;switch(n.type){case"Point":{e=Zt(n);break}case"LineString":{e=Bt(n);break}case"Polygon":{e=se(n);break}case"MultiPoint":{e=te(n);break}case"MultiLineString":{e=Qt(n);break}case"MultiPolygon":{e=ee(n);break}case"GeometryCollection":{e=Vt(n);break}default:throw new Error("Unsupported GeoJSON type: "+n.type)}return e}function Ht(n,t){const e=I(n);return L(e,t)}function Vt(n,t){return n.geometries.map(function(s){return I(s)})}function Zt(n){const t=n.coordinates;return{type:"Point",flatCoordinates:t,layout:p(t.length)}}function Bt(n){var s;const t=n.coordinates,e=t.flat();return{type:"LineString",flatCoordinates:e,ends:[e.length],layout:p(((s=t[0])==null?void 0:s.length)||2)}}function Qt(n){var r,o;const t=n.coordinates,e=((o=(r=t[0])==null?void 0:r[0])==null?void 0:o.length)||2,s=[],i=b(s,0,t,e);return{type:"MultiLineString",flatCoordinates:s,ends:i,layout:p(e)}}function te(n){var e;const t=n.coordinates;return{type:"MultiPoint",flatCoordinates:t.flat(),layout:p(((e=t[0])==null?void 0:e.length)||2)}}function ee(n){var r,o;const t=n.coordinates,e=[],s=((o=(r=t[0])==null?void 0:r[0])==null?void 0:o[0].length)||2,i=J(e,0,t,s);return{type:"MultiPolygon",flatCoordinates:e,ends:i,layout:p(s)}}function se(n){var r,o;const t=n.coordinates,e=[],s=(o=(r=t[0])==null?void 0:r[0])==null?void 0:o.length,i=b(e,0,t,s);return{type:"Polygon",flatCoordinates:e,ends:i,layout:p(s)}}function R(n,t){n=x(n,!0,t);const e=n.getType();let s;switch(e){case"Point":{s=le(n);break}case"LineString":{s=re(n);break}case"Polygon":{s=he(n,t);break}case"MultiPoint":{s=oe(n);break}case"MultiLineString":{s=ne(n);break}case"MultiPolygon":{s=ae(n,t);break}case"GeometryCollection":{s=ie(n,t);break}case"Circle":{s={type:"GeometryCollection",geometries:[]};break}default:throw new Error("Unsupported geometry type: "+e)}return s}function ie(n,t){return t=Object.assign({},t),delete t.featureProjection,{type:"GeometryCollection",geometries:n.getGeometriesArray().map(function(s){return R(s,t)})}}function re(n,t){return{type:"LineString",coordinates:n.getCoordinates()}}function ne(n,t){return{type:"MultiLineString",coordinates:n.getCoordinates()}}function oe(n,t){return{type:"MultiPoint",coordinates:n.getCoordinates()}}function ae(n,t){let e;return t&&(e=t.rightHanded),{type:"MultiPolygon",coordinates:n.getCoordinates(e)}}function le(n,t){return{type:"Point",coordinates:n.getCoordinates()}}function he(n,t){let e;return t&&(e=t.rightHanded),{type:"Polygon",coordinates:n.getCoordinates(e)}}function de(n,t,e,s,i,r){const o=[t.lon,t.lat],a=new E({geometry:new w(f(o))});return a.setStyle(new W({image:new Rt({src:s,scale:.125,rotation:e})})),$(n,a,o,i,r)}function ue(n,t,e,s){const i={north:parseFloat(t.north),east:parseFloat(t.east),south:parseFloat(t.south),west:parseFloat(t.west)},r=new E({geometry:new F([[f([i.west,i.north]),f([i.east,i.north]),f([i.east,i.south]),f([i.west,i.south]),f([i.west,i.north])]])});r.setStyle(new W({stroke:new bt({color:"#b833ff",width:2}),fill:new xt({color:"#b833ff22"})}));const o=[(i.east+i.west)/2,(i.north+i.south)/2];return $(n,r,o,e,s)}function $(n,t,e,s,i){const r=new k({source:new N({format:new zt,url:s})}),o=new Lt({target:n,layers:[new It({source:new kt({attributions:["Powered by Esri","Source: Esri, DigitalGlobe, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community"],url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"})}),r,new k({source:new N({features:[t]})})],view:new Nt({center:f(e),zoom:14})});return o.on("click",function(a){const l=o.getEventPixel(a.originalEvent),h=[];o.forEachFeatureAtPixel(l,d=>{h.push({path:d.get("path"),url:d.get("url")})}),i(h)}),o.on("pointermove",function(a){if(a.dragging)return;o.getTargetElement().style.cursor="";const l=o.getEventPixel(a.originalEvent);o.forEachFeatureAtPixel(l,h=>{if(h.get("path")&&h.get("url"))return o.getTargetElement().style.cursor="pointer",!0})}),o}const ce={pin:de,box:ue};window.bootInfobox=Ut;window.makeMapWith=ce;window.displayImage=Tt;window.displayImageOnMap=Xt;window.displayImageWithScale=Yt;
